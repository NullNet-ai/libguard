syntax = "proto3";

package datastore;

service StoreService {
    rpc GetById(GetByIdRequest) returns (Response);
    rpc Aggregate(AggregateRequest) returns (Response);
    rpc GetByFilter(GetByFilterRequest) returns (Response);
    rpc Update(UpdateRequest) returns (Response);
    rpc Delete(DeleteRequest) returns (Response);
    rpc Create(CreateRequest) returns (Response);
    rpc BatchCreate(BatchCreateRequest) returns (Response);
    rpc BatchUpdate(BatchUpdateRequest) returns (Response);
    rpc BatchDelete(BatchDeleteRequest) returns (Response);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Upsert(UpsertRequest) returns (Response);
    rpc Register(RegisterRequest) returns (RegisterResponse);
}
message UpsertRequest {
    UpsertBody body = 1;
    Params params = 2;
    Query query = 3;
}


message UpsertBody {
    string data = 1;
    repeated string conflict_columns = 3;
}
message GetByIdRequest {
    Params params = 1;
    Query query = 2;
}

message GetByFilterRequest {
    GetByFilterBody body = 1;
    Params params = 2;
}

message GetByFilterBody {
    repeated string pluck = 1;
    repeated AdvanceFilter advance_filters = 2;
    string order_by = 3;
    int32 limit = 4;
    int32 offset = 5;
    string order_direction = 6;
    repeated Join joins = 7;
    repeated MultipleSort multiple_sort = 8;
    map<string, string> pluck_object = 9;
    string date_format = 10;

}

message AdvanceFilter {
    string type = 1;
    string field = 2;
    string operator = 3;
    string entity = 4;
    string values = 5;
}

message Value {
    oneof value {
        string string_value = 1;
        int32 int_value = 2;
    }
}

message MultipleSort {
    string by_field = 1;
    string by_direction = 2;
}

message Join {
    string type = 1;
    FieldRelation field_relation = 2;
}

message FieldRelation {
    EntityFieldTo to = 1;
    EntityFieldFrom from = 2;
}

message EntityFieldTo {
    string entity = 1;
    string field = 2;
    string alias = 3;
    int32 limit = 4;
    string order_by = 5;
    repeated AdvanceFilter filters = 6;
}

message EntityFieldFrom {
    string entity = 1;
    string field = 2;
}

message AggregateRequest {
    AggregateBody body = 1;
    Params params = 2;
}

message AggregateBody {
    repeated Aggregation aggregations = 1;
    repeated AdvanceFilter advance_filters = 2;
    string entity = 3;
    string bucket_size = 4;
    Order order = 5;
    repeated Join joins = 6;
}

message Aggregation {
    string aggregation = 1;
    string aggregate_on = 2;
    string bucket_name = 3;
}

message Order {
    string order_by = 1;
    string order_direction = 2;
}

message UpdateRequest {
    Params params = 1;
    Query query = 2;
    string body = 3;
}

message DeleteRequest {
    Params params = 1;
    DeleteQuery query = 2;
}
 message DeleteQuery{
    string is_permanent = 1;
 }

message CreateRequest {
    CreateParams params = 1;
    Query query = 2;
    CreateBody body = 3;
}

message CreateBody{
    string record = 1;
}


//BATCH CREATE
message BatchCreateRequest {
    CreateParams params = 1;
    Query query = 2;
    BatchCreateBody body = 3;
}

message BatchCreateBody {
    string records = 1;
}

//BATCH UPDATE
message BatchUpdateRequest {
    Params params = 1;
    BatchUpdateBody body = 3;
}

message BatchUpdateBody {
    repeated AdvanceFilter advance_filters = 1;
    string updates = 2;
}

//BATCH DELETE
message BatchDeleteRequest {
    Params params = 1;
    BatchDeleteBody body = 3;
}

message BatchDeleteBody {
    repeated AdvanceFilter advance_filters = 1;
}

message CreateParams {
    string table = 1;
}

message LoginRequest {
    LoginBody body = 1;
    LoginParams params = 2;
}

message LoginParams{
    string is_root= 1;
    string t=2;
}

message LoginBody{
    LoginData data = 1;
}

message LoginData {
    string account_id = 1;
    string account_secret = 2;
}

message Query {
    string pluck = 1;
    string durability = 2;
}

message Params {
    string id = 1;
    string table= 2;
    string type=3;
}

message LoginResponse {
    string token = 1;
}

message Response {
    bool success = 1;
    string message = 2;
    string error = 3;
    string statusCode = 4;
    int32 count = 5;
    string encoding = 6;
    string data = 7;
}

message RegisterResponse {
    string organization_id = 1;
    string account_organization_id = 2;
    string account_id = 3;
    string email = 4;
    string contact_id = 5;
    string device_id = 6;
    string device_code = 7;
}
enum AccountType {
    CONTACT = 0;
    DEVICE = 1;
}

message RegisterRequest {
    RegisterParams body = 1;
    bool is_request =2;
}

message RegisterParams {
    string id = 1; // To be deprecated
    string name = 2;
    string contact_id = 3;
    string email = 4;
    string password = 5;
    string parent_organization_id = 6;
    string code = 7;
    repeated string categories = 8;
    string account_status = 9;

    AccountType account_type = 10;
    string organization_name = 11;
    string organization_id = 12;
    string account_id = 13;
    string account_secret = 14;
    bool is_new_user = 15;
    string first_name = 16;
    string last_name = 17;
    bool is_invited = 18;
    string role_id = 19;
    string account_organization_status = 20;
    repeated string account_organization_categories = 21;
    string account_organization_id = 22;
    repeated string contact_categories = 23;
    repeated string device_categories = 24;

    string responsible_account_organization_id = 25;
}